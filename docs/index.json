[{"categories":["数据"],"content":"1.找到路径 把下载好的windows字体复制到这个文件夹下的ttf文件夹 ","date":"2017-03-10","objectID":"/changge-matplotlib-fonts/:0:1","tags":["python"],"title":"如何更改matplotlib的字体","uri":"/changge-matplotlib-fonts/"},{"categories":["数据"],"content":"2.修改文件 修改上图文件路径如下: 最后一处修改为下图样式,并去掉前面的#号: ","date":"2017-03-10","objectID":"/changge-matplotlib-fonts/:0:2","tags":["python"],"title":"如何更改matplotlib的字体","uri":"/changge-matplotlib-fonts/"},{"categories":["数据"],"content":"3.删除缓存文件 C:\\Users\\Administrator\\ .matplotlib ","date":"2017-03-10","objectID":"/changge-matplotlib-fonts/:0:3","tags":["python"],"title":"如何更改matplotlib的字体","uri":"/changge-matplotlib-fonts/"},{"categories":["数据"],"content":"4.重启annaconda ","date":"2017-03-10","objectID":"/changge-matplotlib-fonts/:0:4","tags":["python"],"title":"如何更改matplotlib的字体","uri":"/changge-matplotlib-fonts/"},{"categories":["数据"],"content":"5.重启以后在anaconda中添加代码: plt.rcParams['font.sans-serif'] = ['SimHei'] ","date":"2017-03-10","objectID":"/changge-matplotlib-fonts/:0:5","tags":["python"],"title":"如何更改matplotlib的字体","uri":"/changge-matplotlib-fonts/"},{"categories":["数据"],"content":"1.多条sql语句必须用;号分隔; 2.sql语句不区分大小写; 3.处理sql语句时,其中所有空格都被忽略.sql语句可以写成长的一行,也可以分开写多行. 4.mysql在选择多个列的时候一定要在选择列后面加上逗号;最后一个选择列可以不加; 5.一般而言，除非你确实需要表中的每一列，否则最好别使用*通配符。因为这会耗损sql服务器资源; 6.SELECT DISTINCT vend_id 告诉 DBMS 只返回不同（具有唯一性）的vend_id 行，distincy的作用就是返回唯一值; 7.在指定一条 ORDER BY 子句时，应该保证它是 SELECT 语句中最后一条子句。如果它不是最后的子句，将会出现错误消息。 8.如果想在多个列上进行降序排序，必须对每一列指定 DESC 关键字。ASC的作用是升序,一般而言默认是升序,所以a很少被使用; 9.mysql中,单引号用来限定字符串。如果将值与字符串类型的 列进行比较，就需要限定引号。用来与数值列进行比较的值不用引号。 10.!=和\u003c\u003e通常可以互换。但是，并非所有 DBMS 都支持这两种不等于操作符。例如，Microsoft Access 支持\u003c\u003e而不支持!=。 11.NULL无值（no value），它与字段包含 0、空字符串或仅仅包含空格不同。 12.OR,WHERE 子句中使用的关键字，用来表示检索匹配任一给定条件的行。如何 AND使用的化,and 在求值过程中优先级更高.解决冲突的方法是及时使用圆括号去进行分组计算组合,界定优先级顺序. 13.mysql中的%有点类似于搜索命令中的*,%告诉 DBMS 接受 Fish(关键词) 之后的任意字符，不管它有多少字符。但是这个通配符不能匹配NULL. 14.与匹配多个字符的%不同,_下划线只匹配一个字符; 15.mysql使用过程中查询网站:https://www.runoob.com/mysql/mysql-tutorial.html 16.数据库设计三范式;数据库三范式的目的就是为了解决数据冗余;三范式,1.所有表都该有主键,每个表的数据元不可再分;2.所有非主键字段完全依赖主键,不可产生部分依赖;3.所有非主键字段直接依赖主键,不能产生传递依赖; ","date":"2014-09-28","objectID":"/mysql-default/:0:0","tags":["mysql"],"title":"MYSQL数据库特征","uri":"/mysql-default/"},{"categories":["数据"],"content":"这里是mysql例题导入代码 ------------创建数据库--------------- create database data charset=utf8; ------------ 建表语句----------------- # 学生表 Student： create table Student( SId varchar(10) , Sname varchar(10), Sage datetime, Ssex varchar(10)); # 教师表 Teacher create table Teacher( TId varchar(10), Tname varchar(10)); # 科目表 Course create table Course( CId varchar(10), Cname nvarchar(10), TId varchar(10)); # 成绩表 SC create table SC( SId varchar(10), CId varchar(10), score decimal(18,1)); ------------ 插入数据语句----------------- # 学生表 Student： insert into Student values('01' , '赵雷' , '1990-01-01' , '男'); insert into Student values('02' , '钱电' , '1990-12-21' , '男'); insert into Student values('03' , '孙风' , '1990-05-20' , '男'); insert into Student values('04' , '李云' , '1990-08-06' , '男'); insert into Student values('05' , '周梅' , '1991-12-01' , '女'); insert into Student values('06' , '吴兰' , '1992-03-01' , '女'); insert into Student values('07' , '郑竹' , '1989-07-01' , '女'); insert into Student values('09' , '张三' , '2017-12-20' , '女'); insert into Student values('10' , '李四' , '2017-12-25' , '女'); insert into Student values('11' , '李四' , '2017-12-30' , '女'); insert into Student values('12' , '赵六' , '2017-01-01' , '女'); insert into Student values('13' , '孙七' , '2018-01-01' , '女'); # 科目表 Course insert into Course values('01' , '语文' , '02'); insert into Course values('02' , '数学' , '01'); insert into Course values('03' , '英语' , '03'); # 教师表 Teacher insert into Teacher values('01' , '张三'); insert into Teacher values('02' , '李四'); insert into Teacher values('03' , '王五'); # 成绩表 SC insert into SC values('01' , '01' , 80); insert into SC values('01' , '02' , 90); insert into SC values('01' , '03' , 99); insert into SC values('02' , '01' , 70); insert into SC values('02' , '02' , 60); insert into SC values('02' , '03' , 80); insert into SC values('03' , '01' , 80); insert into SC values('03' , '02' , 80); insert into SC values('03' , '03' , 80); insert into SC values('04' , '01' , 50); insert into SC values('04' , '02' , 30); insert into SC values('04' , '03' , 20); insert into SC values('05' , '01' , 76); insert into SC values('05' , '02' , 87); insert into SC values('06' , '01' , 31); insert into SC values('06' , '03' , 34); insert into SC values('07' , '02' , 89); insert into SC values('07' , '03' , 98); ###例题列表 1:查询课程01比课程02成绩高的学生信息及课程分数 解题代码 #1.查询01课程比02课程成绩高的学生信息和成绩分数 #学生信息在student这个表中 #成绩分数在sc表中 #目的:01课程比02课程成绩高的学生,01课程和02课程用cid体现,cid只在sc中有 select * from student a INNER JOIN sc b on a.SId=b.SId #这里看成第一个大表 INNER JOIN sc c on b.SId=c.SId and b.CId=\"01\" AND c.cid=\"02\" #这里看成第二个大表 WHERE b.score\u003ec.score #进行分数比较 2:查询同时存在01课程和02课程的情况 解题代码 #第一种写法 #查询同时存在01课程和02课程的情况 #01课程和02课程的成绩表都在sc表之中 SELECT * FROM (SELECT * FROM sc where cid='01') a INNER join (select * from sc where cid='02') b on a.sid=b.sid #第二种写法 #这个解决方案相当于,把where条件改加到最下面了 SELECT * FROM sc a INNER join sc b on a.sid=b.sid WHERE a.CId='01' AND b.cid='02' 3:查询存在01课程但可能不存在02课程的情况(不存在时显示为null) 解题代码 #第一种写法 #查询存在01课程但可能不存在02课程的情况(不存在时显示为null) SELECT * FROM (select * from sc WHERE cid='01') a LEFT JOIN (SELECT * FROM sc where CId='02') b on a.sid=b.sid #第二种写法 SELECT * FROM sc a LEFT JOIN sc b on a.sid=b.sid and b.cid='02' WHERE a.cid='01'; 4:查询不存在01课程,但存在02课程的情况 解题代码 #第一种写法 SELECT * FROM (SELECT * FROM sc WHERE sid NOT IN (SELECT SId FROM sc WHERE CId='01')) A INNER JOIN SC B ON A.SID=B.SId AND B.CID='02'; #第二种写法 select * FROM sc a WHERE SId not in (SELECT SId from sc where cid='01')#用not in 进行了排除 AND cid='02';git status 5:查询不存在01课程,但存在02课程的情况 解题代码 #第一种写法 SELECT * FROM (SELECT * FROM sc WHERE sid NOT IN (SELECT SId FROM sc WHERE CId='01')) A INNER JOIN SC B ON A.SID=B.SId AND B.CID='02'; #第二种写法 select * FROM sc a WHERE SId not in (SELECT SId from sc where cid='01')#用not in 进行了排除 AND cid='02'; 6:查询平均成绩大于等于 60 分的同学的学生编号和学生姓名和平均成绩 解题代码 #解题思路:先查询sid,然后用sid进行匹配;group by配合平均函数使用; SELECT b.sid,b.Sname,a.avg_score FROM (SELECT sid,AVG(score) as avg_score FROM sc GROUP BY SId HAVING avg_score\u003e=60) a INNER JOIN student b ON a.sid=b","date":"2014-09-28","objectID":"/unforgettable-mysql-1/:0:0","tags":["mysql"],"title":"Myqsl语句经典例题","uri":"/unforgettable-mysql-1/"},{"categories":["数据"],"content":"python基础 如果python字符串内部既包含’又包含\"怎么办？ 写法:'I\\'m \\\"OK\\\"!' #可以用转义字符\\来标识 输出:I'm \"OK\"! 解释器和编译器的区别? 解释器是一行一行运行代码,编译器是整体运行代码; python变量命名规则是什么? 变量名称必须为字母或者下划线开头,后跟字母,下划线或者数字.此外不能使用python的关键字,举例不能拿print当变量名称; python支持数字类型,字符串,布尔类型,空值,其中数字支持整数,浮点型, 什么是二进制,在python中,用bin(100)求二进制的写法 得到的是一个ob***的值 hex(100)把100转成16进制的数 求余%,地板除//,幂运算 a=6 b=4 c=a*b 0b11100 输入与输出 a=input() b=int_input()#整数输入 字符占位练习1:小明的成绩从去年的72分提升到了今年的85分，请计算小明成绩提升的百分点，并用字符串格式化显示出’xx.x%'，只保留小数点后1位： 在Python中，采用的格式化方式和C语言是一致的，用%实现，举例如下： \u003e\u003e\u003e 'Hello, %s' % 'world' 'Hello, world' \u003e\u003e\u003e 'Hi, %s, you have $%d.' % ('Michael', 1000000) 'Hi, Michael, you have $1000000.' %运算符就是用来格式化字符串的。在字符串内部，%s表示用字符串替换，%d表示用整数替换，有几个%?占位符，后面就跟几个变量或者值，顺序要对应好。如果只有一个%?，括号可以省略。 常见的占位符有： 占位符替换内容%d整数%f浮点数%s字符串%x十六进制整数,如果不太确定应该用什么，%s永远起作用，它会把任何数据类型转换为字符串： \u003e\u003e\u003e 'Age: %s. Gender: %s' % (25, True) 'Age: 25. Gender: True' 遇到字符串里的%是一个普通字符的时候,用%%来表示一个%: \u003e\u003e\u003e 'growth rate: %d %%' % 7 'growth rate: 7 %' format() 另一种格式化字符串的方法是使用字符串format()方法,它会用传入的参数一次替换字符串内的占位符{0} 、｛1｝…..,不过这种方式写起来比%要麻烦得多: \u003e\u003e\u003e 'Hello, {0}, 成绩提升了 {1:.1f}%'.format('小明', 17.125) 'Hello, 小明, 成绩提升了 17.1%' 结合以上内容,练习1代码的最终写法是: \u003e\u003e\u003e a1=75 a2=82 a3=((a2/a1)-1)*100 print('Hello, {0}, 成绩提升了 {1:.2f}%'.format('小明', a3)) 输出:Hello, 小明, 成绩提升了 9.33% 练习2 1.完成一个函数,判断字符串单词个数; 2.把字符串的单词数改成逆序排列 this is a pig 练习3 输入三行文字,让这三行文字在一个方框内居中显示; 如输入(不要输入中文): hello world! my name is ibolee have a nice day! 显示结果带边框居中. ","date":"2014-03-10","objectID":"/migrate-from-jekyll/:0:0","tags":["python"],"title":"python学习笔记","uri":"/migrate-from-jekyll/"},{"categories":["数据"],"content":"###问题描述: 用powerbi的powerquery导入数据的时候出现下图: 本错误是由于你使用了ACCESS2007版本建立的数据库,但服务器中没有相配合使用的程序,所以出错. 未在本地计算机上注册“microsoft.ACE.oledb.12.0”提供程序。 ###解决办法: 下载安装一个AccessDatabaseEngine,注意选择自己需要的位数,比如上图报错是64位. 下载地址:https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=13255 ","date":"2019-09-02","objectID":"/power-bi-access-database-engine/:0:0","tags":["PowerBi"],"title":"Power bi导入数据出现:microsoft.ACE.oledb.12.0无法连接解决办法","uri":"/power-bi-access-database-engine/"},{"categories":null,"content":"你好! 我叫黑李白 来自内蒙古巴彦淖尔; 主要从事数据分析领域。 感谢访问！ ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于","uri":"/about/"}]